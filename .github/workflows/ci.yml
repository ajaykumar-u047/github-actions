name: Build a Docker image and Push it to ACR

on:
  push:
    branches:
    - test-ci 

jobs:
  build_and_push_docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 
      
      - name: Set Short Hash
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
      - name: Set Docker tag Name
        id: tag
        run: echo "::set-output name=docker_tag::"${GITHUB_REF_NAME/\//"-"}""
 
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./flask-app/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USER }}/${{ github.event.repository.name }}:${{ steps.tag.outputs.docker_tag }}-${{ steps.vars.outputs.sha_short }}, ${{ secrets.DOCKER_USER }}/${{ github.event.repository.name }}:${{ steps.tag.outputs.docker_tag }}-latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:         
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Configure AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::925305708877:role/msd-msd-eks-role
          role-duration-seconds: 7200
          aws-region: us-east-1
          role-session-name: MySessionName

      - name: Deploy to Kubernetes cluster                                          
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}                                                             
          RELEASE_IMAGE: ${{ secrets.DOCKER_USER }}/${{ github.event.repository.name }}:${{ steps.tag.outputs.docker_tag }}-${{ steps.vars.outputs.sha_short }}
        with:
          args: set image deployment/server server=${{ env.RELEASE_IMAGE }}  -n server